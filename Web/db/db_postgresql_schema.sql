CREATE SCHEMA "public";

CREATE TABLE "public".address ( 
	address_id           integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	parent_id            integer  NOT NULL ,
	line_1               varchar(64)   ,
	line_2               varchar(64)   ,
	line_3               varchar(64)   ,
	line_4               varchar(64)   ,
	city                 varchar(128)   ,
	country              varchar(128)  NOT NULL ,
	other_address_details text   ,
	CONSTRAINT address_pkey PRIMARY KEY ( address_id )
 );

CREATE TABLE "public".permission ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	permission           varchar(128)  NOT NULL ,
	isadmin              bool  NOT NULL ,
	CONSTRAINT permission_pkey PRIMARY KEY ( id )
 );

CREATE TABLE "public".status_catalog ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	status_name          varchar(128)   ,
	CONSTRAINT status_catalog_pkey PRIMARY KEY ( id )
 );

CREATE TABLE "public".unit ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	unit_name            varchar(64)   ,
	unit_short           varchar(8)  NOT NULL ,
	CONSTRAINT unit_pkey PRIMARY KEY ( id )
 );

CREATE TABLE "public".customer ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	name                 varchar(128)   ,
	user_name            varchar(64)   ,
	"password"           varchar(64)   ,
	time_created         timestamp   ,
	confirmation_code    varchar(255)   ,
	time_confirmed       varchar(255)  NOT NULL ,
	email                varchar(128)   ,
	phone                varchar(128)  NOT NULL ,
	address_id           integer  NOT NULL ,
	permission_id        integer  NOT NULL ,
	CONSTRAINT customer_pkey PRIMARY KEY ( id )
 );

CREATE TABLE "public".employee ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	name                 varchar(128)   ,
	uname                varchar(64)   ,
	"password"           varchar(64)   ,
	phone                varchar(64)  NOT NULL ,
	email                varchar(128)   ,
	address_id           integer   ,
	permission_id        integer   ,
	time_created         timestamp  NOT NULL ,
	employee_code        varchar(128)  NOT NULL ,
	current_position     text   ,
	CONSTRAINT employee_pkey PRIMARY KEY ( id )
 );

CREATE TABLE "public".item ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	item_name            varchar(255)   ,
	price                numeric(10,2)   ,
	item_photo           text   ,
	description          text  NOT NULL ,
	unit_id              integer   ,
	CONSTRAINT item_pkey PRIMARY KEY ( id )
 );

CREATE TABLE "public".orders ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	customer_id          integer   ,
	time_placed          timestamp   ,
	details              text  NOT NULL ,
	delivery_address_id  integer   ,
	delivery_address     varchar(255)   ,
	grade_customer       integer  NOT NULL ,
	grade_employee       integer  NOT NULL ,
	CONSTRAINT orders_pkey PRIMARY KEY ( id )
 );

CREATE TABLE "public".delivery ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	delivery_time_planned timestamp   ,
	delivery_time_actual timestamp  NOT NULL ,
	notes                text  NOT NULL ,
	placed_order_id      integer   ,
	employee_id          integer   ,
	CONSTRAINT delivery_pkey PRIMARY KEY ( id )
 );

CREATE TABLE "public".notes ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	placed_order_id      integer   ,
	employee_id          integer  NOT NULL ,
	customer_id          integer  NOT NULL ,
	note_time            timestamp   ,
	note_text            text   ,
	CONSTRAINT notes_pkey PRIMARY KEY ( id )
 );

CREATE TABLE "public".order_item ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	placed_order_id      integer   ,
	item_id              integer   ,
	quantity             numeric(10,3)   ,
	price                numeric(10,2)   ,
	CONSTRAINT order_item_pkey PRIMARY KEY ( id )
 );

CREATE TABLE "public".order_status ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	place_order_id       integer   ,
	status_catalog_id    integer   ,
	status_time          timestamp   ,
	details              text  NOT NULL ,
	CONSTRAINT order_status_pkey PRIMARY KEY ( id )
 );

CREATE TABLE "public".box ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	box_code             varchar(32)   ,
	delivery_id          integer   ,
	employee_code        integer   ,
	CONSTRAINT box_pkey PRIMARY KEY ( id )
 );

CREATE TABLE "public".item_in_box ( 
	id                   integer GENERATED BY DEFAULT AS IDENTITY  NOT NULL ,
	box_id               integer   ,
	item_id              integer   ,
	quantity             numeric(10,3)   ,
	is_replacement       bool   ,
	CONSTRAINT item_in_box_pkey PRIMARY KEY ( id )
 );

ALTER TABLE "public".box ADD CONSTRAINT delivery_box_fk FOREIGN KEY ( delivery_id ) REFERENCES "public".delivery( id ) ON DELETE CASCADE;

ALTER TABLE "public".box ADD CONSTRAINT employee_box_fk FOREIGN KEY ( employee_code ) REFERENCES "public".employee( id ) ON DELETE CASCADE;

ALTER TABLE "public".customer ADD CONSTRAINT address_customer_fk FOREIGN KEY ( address_id ) REFERENCES "public".address( address_id ) ON DELETE CASCADE;

ALTER TABLE "public".customer ADD CONSTRAINT permission_customer_fk FOREIGN KEY ( permission_id ) REFERENCES "public".permission( id ) ON DELETE CASCADE;

ALTER TABLE "public".delivery ADD CONSTRAINT employee_delivery_fk FOREIGN KEY ( employee_id ) REFERENCES "public".employee( id ) ON DELETE CASCADE;

ALTER TABLE "public".delivery ADD CONSTRAINT placed_order_delivery_fk FOREIGN KEY ( placed_order_id ) REFERENCES "public".orders( id ) ON DELETE CASCADE;

ALTER TABLE "public".employee ADD CONSTRAINT address_employee_fk FOREIGN KEY ( address_id ) REFERENCES "public".address( address_id ) ON DELETE CASCADE;

ALTER TABLE "public".employee ADD CONSTRAINT permission_employee_fk FOREIGN KEY ( permission_id ) REFERENCES "public".permission( id ) ON DELETE CASCADE;

ALTER TABLE "public".item ADD CONSTRAINT unit_item_fk FOREIGN KEY ( unit_id ) REFERENCES "public".unit( id ) ON DELETE CASCADE;

ALTER TABLE "public".item_in_box ADD CONSTRAINT box_item_in_box_fk FOREIGN KEY ( box_id ) REFERENCES "public".box( id ) ON DELETE CASCADE;

ALTER TABLE "public".item_in_box ADD CONSTRAINT item_in_box_fk FOREIGN KEY ( item_id ) REFERENCES "public".item( id ) ON DELETE CASCADE;

ALTER TABLE "public".notes ADD CONSTRAINT customer_notes_fk FOREIGN KEY ( customer_id ) REFERENCES "public".customer( id ) ON DELETE CASCADE;

ALTER TABLE "public".notes ADD CONSTRAINT employee_notes_fk FOREIGN KEY ( employee_id ) REFERENCES "public".employee( id ) ON DELETE CASCADE;

ALTER TABLE "public".notes ADD CONSTRAINT place_order_id_notes_fk FOREIGN KEY ( placed_order_id ) REFERENCES "public".orders( id ) ON DELETE CASCADE;

ALTER TABLE "public".order_item ADD CONSTRAINT item_order_item_fk FOREIGN KEY ( item_id ) REFERENCES "public".item( id ) ON DELETE CASCADE;

ALTER TABLE "public".order_item ADD CONSTRAINT placed_order_order_item_fk FOREIGN KEY ( placed_order_id ) REFERENCES "public".orders( id ) ON DELETE CASCADE;

ALTER TABLE "public".order_status ADD CONSTRAINT orders_order_status_fk FOREIGN KEY ( place_order_id ) REFERENCES "public".orders( id ) ON DELETE CASCADE;

ALTER TABLE "public".order_status ADD CONSTRAINT status_catalog_order_status_fk FOREIGN KEY ( status_catalog_id ) REFERENCES "public".status_catalog( id ) ON DELETE CASCADE;

ALTER TABLE "public".orders ADD CONSTRAINT address_orders_fk FOREIGN KEY ( delivery_address_id ) REFERENCES "public".address( address_id ) ON DELETE CASCADE;

ALTER TABLE "public".orders ADD CONSTRAINT customer_orders_fk FOREIGN KEY ( customer_id ) REFERENCES "public".customer( id ) ON DELETE CASCADE;
